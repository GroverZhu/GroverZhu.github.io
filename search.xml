<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git常用命令简介</title>
    <url>/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="git-简介">Git 简介</h1>
<p>关于Git，对于程序员肯定不陌生，全球最大开源平台 <a href="https://github.com/">GitHub</a> 便是基于 Git 创建，Git 与 GitHub 的关系，从名字上就可以看出 GitHub 就是基于 Git 的一个仓库( hub )， Git 是一个<strong>分布式版本控制软件</strong>，而 GitHub 就是基于该版本控制软件而创建的一个网站。</p>
<span id="more"></span>
<p>有些人会觉得 Git 与 GitHub 其实差不多，但实际上，如果你需要往 GitHub 这个网站上传你的代码，那么你需要通过 Git 分布式版本控制软件来上传你的代码，但是你要查找别人的代码，那么你就需要从 GitHub 这个网站上搜索，对于网站的操作，并不会很麻烦，有图形化界面，所以我们的目标应该是先放在对Git这个分布式版本控制软件的使用。</p>
<p>所以在上面讲了那么多次Git是分布式版本控制软件，那么什么叫<strong>分布式</strong>，什么又叫<strong>版本控制软件</strong>。对于<strong>分布式</strong>，你可以理解为“鸡蛋不能放在同一个筐里”，<strong>版本控制</strong>可以理解为，你导师要你写一份论文，但是每次你提交论文给你的导师，他都会提一些修改，你为了避免改后的论文比之前的还要糟糕，你把每次提交的论文都保存下来，然后你的论文就变成下面这样的形式：</p>
<blockquote>
<blockquote>
<blockquote>
<p>"paper1.docx" "paper2.docx" "paper3.docx" ...</p>
</blockquote>
</blockquote>
</blockquote>
<p>那么，如果你使用了版本控制软件之后，你就可以在每次修改之后把每次修改的内容写一个概要，但是你的论文文件就只有一个文件，就不会像前面那样会产生无数个文件，到最后连自己都不知道哪个是最新的了，这就是版本控制。</p>
<p>那么你的文件就相当于那些“鸡蛋”，分布式就是你把这些“鸡蛋”放在不同的“篮筐”里，Git就是 <strong>“鸡蛋”+“篮筐”</strong></p>
<p>既然Git是个软件，就先到<a href="https://git-scm.com/">Git</a>官网针对你的操作系统安装对应的版本，博主是在Windows10下安装，其他平台安装可参考其他网站，在Windows下安装，可以一键next，安装后，右击鼠标会出现<code>Git Bash Here</code>和<code>Git GUI Here</code> , 如下图所示： <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/git_bash.jpg" class=""></p>
<p>出现上图的图标，那么恭喜骚年，你安装成功了，后面的话，就会对Git的命令行使用进行解释</p>
<p>也许，你会觉得我在逗你玩，那不是有GUI吗？干嘛不用GUI却去用了命令行，是不是自讨苦吃啊！但是我说你不觉得用命令行整个逼格就高了吗？</p>
<p>当然GUI确实入门比较快，如果你很排斥命令行的话，可自行搜索<code>Tortoise Git</code>，这个我没有用过,但是身边有人用过，反映这个比Git自带的GUI友好些，如果你想更熟练地使用Git，那我还是建议你使用命令行，毕竟Git最初的设计就是在命令行下使用的。在后续的文章我只会介绍Git的命令行操作</p>
<p>对于Git的使用，现如今大部分IDE都提供相应的插件，使得Git的使用越来越方便，但通过命令行操作能够更深入理解Git的工作机制，，今天就来介绍一些常用的Git命令。</p>
<p>对于命令行的使用，都会提供一个用户手册，不过不出意外的话一般都会提供英文版本的，英语好的话就可以直接阅读，如果英语不太好的话，也可以去网上查询中文的使用指南。</p>
<h1 id="git-常用本地命令">Git 常用本地命令</h1>
<p>现在先介绍Git的第一个命令<br />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">help</span></span><br></pre></td></tr></table></figure> 在终端敲好该命令后，按下回车，你会看到如下的显示：<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/help.jpg" class=""></p>
<p>可以看到help界面中把Git的操作分为5类，后续的文章会根据这个顺序来解释这些命令。可以看到这个help页面中，对于Git命令的分类为：<br />
&gt;&gt;&gt; 1. 开始一个工作空间 &gt;&gt;&gt; 2. 对当前的工作空间进行操作 &gt;&gt;&gt; 3. 检查历史记录和状态 &gt;&gt;&gt; 4. 对历史记录的操作 &gt;&gt;&gt; 5. 合作</p>
<p>上述这些操作也是使用Git的一般过程：<strong>从创建一个工作空间，对该工作空间进行的操作，操作的过程中会对历史记录进行操作，共享该工作空间与他人合作。</strong></p>
<p>现在继续介绍<code>git help</code>命令，如果你忘了某个命令的具体使用，比如clone这个命令，那么，你可以在控制台上输入<code>git help clone</code> <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/clone_help.jpg" class=""> 之后你的浏览器就会显示出给命令的详细帮助手册(不需要联网，所有的帮助文档都在你的本地硬盘里)，然而很可惜，还是英文的。 <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/clone_browser.jpg" class=""> 还是像上文说的那样，这种官方帮助文档，你可以不使用，但你要知道有这么一种东西，万一哪天情况很急，你又忘记了某一个命令的是有而且还没有其他的途径来获取帮助，这时候就可以通过官方提供的文档来解决你的问题。</p>
<p>接着我们来介绍一下开启一个工作空间的两种方法 <strong>从已有的项目直接复制一份过来，在此基础上进行后续的工作</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> URL路径</span><br></pre></td></tr></table></figure></p>
<p>比如在GitHub上要复制一个项目， 先该项目的主界面下，找到<strong>Clone or download</strong>按钮，然后复制提供的路径，对于开源的项目，提供的<em>HTTPS</em>还是<em>SSH</em>连接没有什么区别，对于私有的项目会有些许区别，在HTTPS的连接中，如果是私有的话，在对项目的提交过程中会提示你输入用户名和密码，使用SSH连接，则需要配置相应的SSH Key才可以进行访问。clone 操作如下图所示： <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/clone.jpg" class=""> 在终端输入 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/GroverZhu/JSP-Servlet.git</span><br></pre></td></tr></table></figure> <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/clone_project.jpg" class=""> 之后就会在你的终端的目录下复制下该项目 <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/project.jpg" class=""> 这个命令用的好，代码写得少。身边的人，Git用的不好，但这个命令记得可清楚了，一天完成n个项目不再是梦，别问怎么写的，问就是<code>git clone</code>。</p>
<p><strong>从零开始创建一个工作空间</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure> 选择一个目录，可以使用bash命令创建一个文件夹<code>mkdir tmp</code>，然后进入该文件夹<code>cd tmp/</code>,再输入<code>git init</code> <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/init.jpg" class=""> <em>init</em>就是<em>initial</em>的缩写，即初始化，之后你可以进入文件夹<em>tmp</em>中查看，会有一个隐藏文件夹<em>.git</em>，这样就初始化好了，你就拥有一个Git工作空间了</p>
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/dir.jpg" class="">
<p>此次对Git命令的介绍就到此，Git的掌握一定要通过自己亲手操作，Git是一个工具，工具的掌握就是熟能生巧。</p>
<p>现在就来介绍Git在本地分支的操作，首先通过Bash命令来创建一个<code>test</code>文件夹，在该文件夹下创建一个<code>a.txt</code><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/bash.jpg" class=""></p>
<p>其实Git在Windows下的命令行终端里面是简化的Bash Shell，如果你对Linux下的Bash Shell 比较熟悉的话，你可以通过该终端进行相关的操作，不过一些命令还是不可以使用的，你可以到<a href="http://gnuwin32.sourceforge.net/">GNU</a>下载相关的package，进行相关配置，就可以像在Linux下运行相关命令。</p>
<p>先通过<code>git init</code>来初始化本地Git仓库，接着编辑<code>a.txt</code><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/context_editor.jpg" class=""></p>
<p>要在本地仓库提交的话，需要进行先运行<code>git add</code>, 再进行<code>git commit</code>。其中<code>git add</code>是将你当前的仓库内容提交到<strong>暂存区</strong>，<strong>暂存区</strong>的话，你可以把它当作你去从家坐车到学校，那么车就是你从家到学校的暂存区，执行<code>git add</code>相当与你现在坐上车，再<code>git commit</code>之后才能到目的地即工作区 完整的命令如下： <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add 你要提交的文件名或文件夹名</span><br><span class="line">git commit -m <span class="string">&quot;提交信息&quot;</span></span><br></pre></td></tr></table></figure></p>
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/user_config.jpg" class="">
<p>此时你会发现无法提交，因为Git不知道你是谁，就像如果你座的车是动车的话，你得有身份证才能够买票就座，所以此时Git给出相应的提示，让你告诉Git你是谁。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;你的邮箱地址&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的名字&quot;</span></span><br></pre></td></tr></table></figure>
<p>登记自己的名字和邮箱之后，可以通过<br />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure> 来查看是否登记成功<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/user_config_verify.jpg" class=""><br />
再次进行<code>git commit</code>，可以查看结果：</p>
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/commit.jpg" class="">
<p>此时就提交成功，想想如果有10+个文件要提交，那么你add的时候一定要打那么多的文件名吗？其实可以使用<code>git add --all</code>表示将当前的所有未提交或者被改变了的文件提交到暂存区里面。</p>
<p>这样的话，我们就要知道当前工作区里面是否有改变，就需要使用<code>git status</code>来查看当前目录下的文件是否发生变化。可以增加一个<code>b.txt</code>及修改<code>a.txt</code>里面的内容之后来看<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/status.jpg" class=""><br />
由此可以看到，git是很智能的，他提示<code>a.txt</code>被修改，<code>b.txt</code>未被跟踪，接着用<code>git add</code> 与 <code>git commit</code>提交<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/commit_2nd.jpg" class=""><br />
如果<code>git add</code>和<code>git commit</code>的次数多了，怎么知道之前的commit是什么？，可以使用 <code>git log</code>来显示每一次的提交 <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/log.jpg" class=""> 这个偶尔会有可能中文显示不出来，可以使用下述命令行来显示中文 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure> 虽然这个命令行很有用，但是每次显示的太臃肿了，信息太多，我们需要一个比较简明的内容，这时候就需要考虑到强大的别名<code>alias</code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global alias.logs <span class="string">&quot;log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit&quot;</span>  </span><br></pre></td></tr></table></figure> <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/log_alias.jpg" class=""><br />
通过<code>logs</code>别名输出简明的Git日志。<br />
Git还提供打标签的功能，当你的项目完成到一定程度的时候，可以打个标签标记一下，使用<code>git tag 标签名</code>，这样就算是打上一个标签了，可以使用<code>git tag</code>，查看所有的标签，要切换到某一个标签的话，可以使用<code>git checkout 标签名</code>。</p>
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/tag.jpg" class="">
<h1 id="gitignore-配置">.gitignore 配置</h1>
<p>在使用Git进行版本管理，有时候一些文件不需要提交，但使用<code>git status</code> 命令后会出现未提示的文件，我们可以用<code>.gitignore</code> 文件对不必要的文件进行屏蔽。</p>
<p>在Windows系统下进行配置<code>.gitignore</code>文件，确实有点难受。首先Windows操作系统下，直接右击鼠标无法新建一个不带文件名的文件，因此我们打开Git命令行，输入<code>touch .gitignore</code>命令你就可以在该文件夹下找到<code>.gitignore</code>文件(其实这是Bash shell下创建一个文件的命令，在介绍<a href="https://groverzhu.github.io/2019/02/07/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8DII/">Git命令</a>的一篇文章中说过，Git的命令行模式下是一种shell，不信你可以在你的Git命令行模式下输入bash shell的命令，它是可以运行，只不过命令没有那么全而已)，建议用<a href="https://code.visualstudio.com/">vscode</a>或者其他文本编辑器编辑该文件。下面介绍<code>.gitignore</code> 文件的编写：</p>
<h2 id="gitignore-中特殊符号">.gitignore 中特殊符号</h2>
<ol type="1">
<li>“#”相当于程序的注释的标记，“#”后的内容都会被忽略掉；同时空行也会被忽略掉；<br />
</li>
<li>“/”表示目录，这个实际上是Linux下的目录表示，其中有绝对路径和相对路径的写法，绝对路径的意思是从一个头开始而这个头的表示为<code>/</code>，例如在Windows下你的C盘里有一个Windows目录，那么表示该目录为<code>/c/Windows</code>；相对的路径的意思为从当前目录开始表示为<code>./</code>开头，如果你已经在C盘，则上面目录的表示为<code>./Windows</code>；<br />
</li>
<li>“*”为通配符，表示可以匹配任意多个字符；</li>
<li>“?”表示匹配任意单个字符；</li>
<li>“[]”表示单个字符的匹配列表；</li>
<li>“!”表示不忽略匹配到的文件或目录。</li>
</ol>
<h2 id="gitignore-例子">.gitignore 例子</h2>
<ol type="1">
<li>忽略指定的文件，比如要忽略readme.md，那么直接在<code>.gitignore</code>文件中编辑<code>readme.md</code>并保存，如要忽略所有后缀为.md的文件可以在<code>.gitignore</code>中编辑为<code>*.md</code>， <code>*</code>号出现表示在<code>.md</code>之前可以出现任意个字符(当文件名中有空格，要用<code>''</code> 包含起来如<code>'Program Files'/</code>，这是Windows下的操作，一般的类Unix系统文件名都不允许有空格)</li>
<li>忽略指定文件夹，比如要忽略文件夹bin，则在<code>.gitignore</code>文件编辑<code>bin/</code>,如果是所有文件夹下都要有bin文件夹，并要忽略该文件可编写为<code>*/bin/</code>;</li>
<li>如果一个文件夹中你只需要其中的一两个，那么可以先忽略该文件夹，再用“!”提出需要的文件，例如你bin文件夹下，你只需要其中的readme.md文件，但它有十来个文件，此时<code>.gitignore</code>文件可编辑为 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/</span><br><span class="line">!bin/readme.md</span><br></pre></td></tr></table></figure>   这样<code>.gitignore</code>文件就配置好了，不觉得很麻烦吗？其实早有人就提供相应的'.gitignore'配置文件，找到你要的部分，就可以直接拿来用，可<a href="https://github.com/github/gitignore">点击查看</a>。在开启一个工程的时候，一定要去配置一下<code>.gitignore</code>文件，一个项目里面有部分文件是跟本地配置相关的，不应该添加到Git的管理中，不同的电脑，本地配置也会不一致，每个人都提交到Git中就会造成混乱。</li>
</ol>
<h1 id="git-部分撤销操作命令">Git 部分撤销操作命令</h1>
<p>在使用git的过程中，并不是每一次的add，commit都是你所预期要提交的，总有失手的时候，有可能你在add的时候你多加了个文件，或者commit之后你后悔了，觉得这次的提交不应该包含这么多的东西。Git的设计还是很友好的，让你有后悔的机会去改正。</p>
<p>介绍几个常见的情形：<br />
1. 你在一次任务完成后，你要提交代码，使用<code>git add .</code>命令，在未使用commit命令之前，你觉得有一个文件现在提交太早了，那么，你可以使用<code>git rm --cached 文件名</code>， 记得要加<code>--cached</code>，表示是删除暂存区里的，如果直接使用<code>git rm</code>那么会把你本地的文件也删除掉。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/cached.jpg" class=""><br />
2. 如果你既add，又commit了, 然后稍加思考，觉得事情不对，觉得刚才的commit message写得有问题， 那么请敲下<code>git commit --amend</code>，然后就会跳到vi模式下，进行编辑你上一次的提交的信息。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/amend.jpg" class=""><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/amend_modify.jpg" class=""><br />
如上图所示，你需要修改的就是那写黄体的字，黄体字下面是你上一次提交的信息。</p>
<ol start="3" type="1">
<li>如果你仔细思考，发现上一次提交的是什么鬼，决定全部删掉此次的提交重来，那么你有两个选择：
<ul>
<li>使用<code>git reset 提交的标识号</code>，先打印出你要回退的提交的标识号，使用<code>git log</code>， 或者上一篇文章里提到的<code>git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit</code>当然正常人是不会去打这么一大长串的命令，正常的都配成别名<code>alias</code>， 比如，我要回退到下图中标记的提交，那么在控制台输入<code>git reset 96a6128</code><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/reset.jpg" class=""><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/logs.jpg" class=""><br />
你可以通过这个命令回退到任何一个你需要的版本，但是在该提交之后的所有提交后都会没有，不过，当你的终端没有关闭，你可以找到之前的log中你最近提交的标识号，然后再用<code>git reset</code>，如果只是想单纯看看那次的提交是什么，你可以使用<code>git checkout 提交的标识号</code>, 这个命令会保持所有的提交不会被删除，你要回到当前分支的最新提交，就输入<code>git checkout 分支名</code><br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/checkout.jpg" class=""></li>
<li>使用<code>git revert 提交的标识号</code>， 这个是git生成一个新的提交，这个的提交与你要回退的提交一模一样，比如你现在提交的分支是<code>a-&gt;b-&gt;c-&gt;d</code>，但是现在你想回到c，现在你只需撤销d的提交就可以回到c的状态了，即输入命令<code>git revert d</code>，这样你的仓库状态就回到c状态。所以在版本控制中，更倾向与使用revert来回退版本，这样可以保留之前的所有信息。 <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/revert.jpg" class=""></li>
</ul></li>
<li>如果你在编辑一个文件，突然发现，这还不如之前写得好，但是你又记不清你之前具体写的内容，你总不能一直用<code>Ctrl + z</code>，来撤销你的操作，一直回到最初状态，在<strong>git</strong>中，用<code>git checkout 文件名</code>，就可以恢复文件。<br />
</li>
<li>当然一般最难受的时候就是，在你开发一个新的功能的时候，有人跟你说之前的功能有问题，你需要去修改bug，那你手头的工作还没保存下来，你也不能提交，这样会造成不必要的提交日志，你可以使用<code>git stash</code>，将你目前的工作先存放起来，当你修改完bug后要回到你之前的工作，使用<code>git stash pop</code>。</li>
</ol>
<h1 id="git-分支与远程命令">Git 分支与远程命令</h1>
<p>前面讲了那么多的Git操作，都是在同一个分支里面操作的，没有体现出来分布式的概念，那么Git的分布式是怎样的呢？Git的分布式主要体现在分支(branch)上，那么下面就详细介绍branch的相关操作。</p>
<p>什么是分支，你可以看树杈，它有多个分支，Git的分支也是这样的，一个主分支，可以有多个其他分支。在建立一个Git仓库的时候，你就在一个分支里面了，那个分支就是master分支，一般叫做主分支。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/branch.jpg" class=""></p>
<p>那么你要创建自己的分支可以使用<code>git branch 分支名</code>， 创建你的分支，再通过<code>git checkout 分支名</code> 来切换到你的分支。也可以使用<code>git checkout -b 分支名</code>直接新建并进入新的分支。 <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/branches.jpg" class=""></p>
<p>创建一个分支的话，是在你当前所在这个分支的基础上，创建一个跟你当前所在分支一模一样的分支，后续的修改之类的分支互不影响。</p>
<p>可以通过<code>git branch</code>查看当前项目的所有分支，前面带*号的就是当前所在的分支<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/branch_list.jpg" class=""></p>
<p>如果有个分支不需要了，那么，使用<code>git branch -d 分支名</code>删除分支，如果有特殊情况，要强制删除掉某一分支，使用<code>git branch -D 分支名</code>。切记不能在当前分支删除当前分支，必须切换到别的分支再执行删除操作。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/branch_delete.jpg" class=""></p>
<p>与树杈不同的是，树杈一个分支分出去之后，就不会回来，但是Git的分支可以合并到任意一个分支。Git的合并是将一个分支合并到当前分支里面。一般有两种合并方式：<br />
1. <code>git merge 分支名</code>，这个合并可以保留分支来源。<br />
2. <code>git rebases 分支名</code>，将要合并的分支中新的内容直接加在当前分支后面，不会保留分支来源。</p>
<p>一般团队合作的话，使用<code>git merge</code>这样就可以追根溯源了，个人的话可以使用<code>git rebase</code>，这样可以使提交记录更加简洁。</p>
<p>同时分支也会带来冲突问题，如果两个分支同时处理一个文件，那么就会产生冲突，需要我们手动解决。</p>
<p>有冲突的话，Git会有提示，会在分支名的后面标<strong>MERGING</strong><br />
</p>
<p>打开有冲突的文件，可以看到文件文件里面，Git都标出来了那边有冲突，<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>到<code>======</code>表示当前分支在这个文件的修改，<code>=======</code>到<code>&gt;&gt;&gt;&gt;&gt;&gt;分支名</code>表示这个这个分支对这个文件的修改，根据需要修改冲突后，再使用<code>git add</code>和<code>git commit</code>的命令之后就可以了。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/conflict.jpg" class=""> <img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/conflict_solved.jpg" class=""></p>
<p>这样本地分支常用的操作就是这些了。剩下的就是远程的，远程的操作主要有：与远程主机创建连接，上传新的内容，从远程主机获取新的内容。</p>
<p>与远程主机建立连接有两种协议：SSH 和 HTTPS，这两个具体协议的区别可以自己去查询，这里只介绍如何再这两种不同的协议建立连接。</p>
<p>首先，HTTPS的连接方式比较简单，只需要使用<code>git clone 地址连接</code>，会让你输入账号和密码，在之后的提交中，可能你每次的提交到远程主机上都需要输入一次账号和密码，就显得有些麻烦了。</p>
<p>使用SSH协议，不过，你需要先生成SSH密钥，使用<code>ssh-keygen -t rsa -C 邮箱</code>，邮箱一定是你在某一平台上的注册账号留下的邮箱。后面会有让你输入，直接按‘Enter’键。上面会有生成密钥的文件目录。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/ssh_key.jpg" class=""></p>
<p>之后去那个目录里面，会有一个id_rsa.pub，打开此文件，将里面的内容粘贴到相应平台设置SSH的地方，这样远程主机就能识别出你使用的这台电脑了。<br />
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/ssh_key_file.jpg" class=""></p>
<p>与远程主机建立联系的话，如果你是现在远程主机上建立的项目，本地是空的话，可以直接使用<code>git clone</code>把项目拷贝下来。如果是本地已经有一个项目了，要放在远程主机的话，现在远程主机上建立一个空的项目，然后使用<code>git remote add 远程主机名 远程链接</code>，一般远程主机名使用origin，这样就建立好了远程联系了。</p>
<p>一般第一次提交的话，使用<code>git push -u origin master</code>，后续的提交的话就可以直接用<code>git push 远程主机名 本地分支名</code>，这个命令的完整格式是：<code>git push 远程主机名 本地分支名:远程分支名</code>，一般而言，远程分支名与本地分支名一致，这样便于管理。如果删除远程的一个分支的话，本地分支名就不用写了，即<code>git push 远程主机名 :远程分支名</code></p>
<blockquote>
<p>从远程分支获取更新但不合并： <code>git fetch 远程主机名 远程分支名</code><br />
从远程分支获取更新并合并：<code>git pull 远程主机名 远程分支名:本地分支名</code></p>
</blockquote>
<p>上述就是Git分支的主要操作，相信你熟悉了这写操作之后就可以使用Git进行团队开发了。(注意命令中的<code>:</code>为英文的字符)</p>
<p>经过上面的讲解，Git的基本操作就是这些，我也自己通过思维导图整理出来，供大家参考：</p>
<img src="/2019/01/23/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/Git.png" class="">
<p>有需要的话，也可以进入<a href="https://mubu.com/doc/xE1EOOAV40"><strong>在线预览</strong></a></p>
<p>在此介绍的都是一些常用的Git命令，Git是一个版本控制工具，工具的熟练程度一定是通过经常使用才熟悉的，所以一定要去找一个项目练练手。像基于Git的代码托管平台最有名气的就是<a href="https://github.com/"><strong>GitHub</strong></a>，当然在国内的话，有<a href="https://dev.tencent.com/user?welcome"><strong>coding</strong></a>, <a href="https://gitee.com/"><strong>码云</strong></a>等平台，可以入手一个动手实践一下。不过，如果想自己打一个代码托管平台，也是可以的，你可以自己买个VPS，在上面部署Git，具体步骤可自已通过搜索引擎查找。</p>
<p>如果基础的Git命令已经掌握了，想进一步进阶的话，首推Git官网出版的Git说明书 <a href="https://git-scm.com/book/zh/v2"><strong>Pro Git</strong></a></p>
<p>如果平时忘记了Git的命令行的使用，还是到搜索引擎查找吧。</p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL练习</title>
    <url>/2019/01/22/SQL%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<p>已知某数据库中存在如下四张表：<br />
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">department(dNo,dName,officeRoom,homepage)</span><br><span class="line">student(sNo,sName,sex,age,dNo)</span><br><span class="line">course(cNo,cName,cPNo,credit,dNo)   </span><br><span class="line">sc(sNo,cNo,score,recordDate)   </span><br></pre></td></tr></table></figure> <span id="more"></span></p>
<h2 id="query">Query</h2>
<h3 id="一单表"><strong>一、单表</strong></h3>
<p>1.查询所有年龄大于等于20岁的学生学号、姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure> 2.查询所有姓钱的男生学号、姓名、出生年份； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName, <span class="number">2018</span> <span class="operator">-</span> age </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> sName <span class="keyword">like</span> <span class="string">&#x27;钱%&#x27;</span> <span class="keyword">and</span> sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span>;</span><br></pre></td></tr></table></figure> 3.查询所有学分大于3的课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName </span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> credit <span class="operator">&gt;</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure> 4.查询所有没有被分配到任何学院的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sName </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> dNo <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure> 5.查询所有尚未设置主页的学院名称。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> dName </span><br><span class="line"><span class="keyword">from</span> department </span><br><span class="line"><span class="keyword">where</span> homepage <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure> ### <strong>二、聚集</strong><br />
1.查询各个学院的平均年龄；<br />
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> dNo, <span class="built_in">avg</span>(age) </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dNo;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> department.dNo, department.dName, <span class="built_in">avg</span>(age) </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">left</span> <span class="keyword">join</span> department <span class="keyword">on</span> (student.dNo <span class="operator">=</span> department.dNo)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> department.dNo, department.dName;</span><br></pre></td></tr></table></figure> 2.查询每个学生选修课程的平均分； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, <span class="built_in">avg</span>(score) 				</span><br><span class="line"><span class="keyword">from</span> sc 		</span><br><span class="line"><span class="keyword">where</span> score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>				</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sNo;						</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName, <span class="built_in">avg</span>(score)</span><br><span class="line"><span class="keyword">from</span> student, sc</span><br><span class="line"><span class="keyword">where</span> student.sNo <span class="operator">=</span> sc.sNo <span class="keyword">and</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo, student.sName;</span><br></pre></td></tr></table></figure> 3.查询各课程的平均分；<br />
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cNo，<span class="built_in">avg</span>(score) 			</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>						</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cNo;					</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> course.cNo, course.cName, <span class="built_in">avg</span>(score)</span><br><span class="line"><span class="keyword">from</span> course, sc</span><br><span class="line"><span class="keyword">where</span> course.cNo <span class="operator">=</span> sc.cNo <span class="keyword">and</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> course.cNo, course.cName;</span><br></pre></td></tr></table></figure> 4.查询各学院开设的课程门数； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> dNo, <span class="built_in">count</span>(cNo) 			</span><br><span class="line"><span class="keyword">from</span> course 					</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dNo;					</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> department.dNo, department.dName, <span class="built_in">count</span>(course.cNo)</span><br><span class="line"><span class="keyword">from</span> department <span class="keyword">join</span> course <span class="keyword">using</span>(dNo)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> department.dNo, department.dName;</span><br></pre></td></tr></table></figure> 5.查询各门课程选修人数。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cNo, <span class="built_in">count</span>(sNo) 			</span><br><span class="line"><span class="keyword">from</span> sc 						</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cNo;					</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> course.cNo, course.cName, <span class="built_in">count</span>(sc.sNo)</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">join</span> course <span class="keyword">using</span> (cNo)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> course.cNo, course.cName;</span><br></pre></td></tr></table></figure> ###<strong>三、多表</strong><br />
1.查询“信息学院”所有学生学号与姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> dNo <span class="keyword">in</span></span><br><span class="line">    (<span class="keyword">select</span> dNo</span><br><span class="line">    <span class="keyword">from</span> department</span><br><span class="line">    <span class="keyword">where</span> dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span>);</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName</span><br><span class="line"><span class="keyword">from</span> student, department</span><br><span class="line"><span class="keyword">where</span> student.dNo <span class="operator">=</span> department.dNo <span class="keyword">and</span> department.dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> department <span class="keyword">using</span> (dNo)</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> department <span class="keyword">on</span> (student.dNo <span class="operator">=</span> department.dNo)</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span>;</span><br></pre></td></tr></table></figure> 2.查询“软件学院”开设的所有课程号与课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cNo, cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> dNo <span class="keyword">in</span> </span><br><span class="line">        (<span class="keyword">select</span> dNo</span><br><span class="line">        <span class="keyword">from</span> department</span><br><span class="line">        <span class="keyword">where</span> dName <span class="operator">=</span> <span class="string">&#x27;软件学院&#x27;</span>);</span><br></pre></td></tr></table></figure> 3.查询与“陈丽”在同一个系的所有学生学号与姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> dNo <span class="keyword">in</span></span><br><span class="line">    (<span class="keyword">select</span> dNo</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;陈丽&#x27;</span>);</span><br></pre></td></tr></table></figure> 4.查询与“张三”同岁的所有学生学号与姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> age <span class="operator">=</span></span><br><span class="line">        (<span class="keyword">select</span> age</span><br><span class="line">        <span class="keyword">from</span> student</span><br><span class="line">        <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>);</span><br></pre></td></tr></table></figure> 5.查询与“张三”同岁且不与“张三”在同一个系的学生学号与姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sNo, sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> age <span class="operator">=</span></span><br><span class="line">        (<span class="keyword">select</span> age</span><br><span class="line">        <span class="keyword">from</span> student</span><br><span class="line">        <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line">    <span class="keyword">and</span> dNo <span class="operator">&lt;&gt;</span></span><br><span class="line">        (<span class="keyword">select</span> dNo</span><br><span class="line">        <span class="keyword">from</span> student</span><br><span class="line">        <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>);</span><br></pre></td></tr></table></figure> 6.查询学分大于“离散数学”的所有课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> credit <span class="operator">&gt;</span> </span><br><span class="line">        (<span class="keyword">select</span> credit</span><br><span class="line">        <span class="keyword">from</span> course</span><br><span class="line">        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>);</span><br></pre></td></tr></table></figure> 7.查询选修了课程名为“组合数学”的学生人数； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(sNo)</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sNo <span class="keyword">in</span> </span><br><span class="line">        (<span class="keyword">select</span> sNo</span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> cNo <span class="keyword">in</span> </span><br><span class="line">                    (<span class="keyword">select</span> cNo</span><br><span class="line">                    <span class="keyword">from</span> course</span><br><span class="line">                    <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;组合数学&#x27;</span>));</span><br></pre></td></tr></table></figure> 8.查询没有选修“离散数学”的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">        (<span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> sNo <span class="operator">=</span> student.sNo <span class="keyword">and</span> cNo <span class="operator">=</span> </span><br><span class="line">                                        (<span class="keyword">select</span> cNo</span><br><span class="line">                                        <span class="keyword">from</span> course</span><br><span class="line">                                        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>));</span><br></pre></td></tr></table></figure> 9.查询与“算法设计与分析”、“移动计算”学分不同的所有课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">as</span> c1</span><br><span class="line"><span class="keyword">where</span> (c1.credit <span class="operator">&lt;&gt;</span> </span><br><span class="line">                (<span class="keyword">select</span> credit </span><br><span class="line">                <span class="keyword">from</span> course</span><br><span class="line">                <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;算法设计与分析&#x27;</span>)</span><br><span class="line">    <span class="keyword">and</span> c1.credit <span class="operator">&lt;&gt;</span> </span><br><span class="line">            (<span class="keyword">select</span> credit</span><br><span class="line">            <span class="keyword">from</span> course</span><br><span class="line">            <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;移动计算&#x27;</span>));</span><br></pre></td></tr></table></figure> 10.查询平均分大于等于90分的所有课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cNo <span class="keyword">in</span></span><br><span class="line">        (<span class="keyword">select</span> cNo</span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> cNo</span><br><span class="line">        <span class="keyword">having</span> <span class="built_in">avg</span>(score) <span class="operator">&gt;=</span> <span class="number">90</span>);</span><br></pre></td></tr></table></figure> 11.查询选修了“离散数学”课程的所有学生姓名与成绩； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName, sc.score											</span><br><span class="line"><span class="keyword">from</span> student, sc														</span><br><span class="line"><span class="keyword">where</span> student.sNo <span class="operator">=</span> sc.sNo <span class="keyword">and</span> sc.cNo <span class="operator">=</span> </span><br><span class="line">                                        (<span class="keyword">select</span> cNo</span><br><span class="line">                                        <span class="keyword">from</span> course</span><br><span class="line">                                        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>);</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName, sc.score</span><br><span class="line"><span class="keyword">from</span> (student <span class="keyword">join</span> sc <span class="keyword">using</span> (sNo)) <span class="keyword">join</span> course <span class="keyword">using</span> (cNo)</span><br><span class="line"><span class="keyword">where</span> course.cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>;</span><br></pre></td></tr></table></figure> 12.查询“王兵”所选修的所有课程名称及成绩； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> course.cName, sc.score				</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">natural</span> <span class="keyword">join</span> sc					</span><br><span class="line"><span class="keyword">where</span> sc.sNo <span class="keyword">in</span> </span><br><span class="line">                (<span class="keyword">select</span> sNo</span><br><span class="line">                <span class="keyword">from</span> student</span><br><span class="line">                <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;王兵&#x27;</span>);							</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> course.cName, sc.score</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">join</span> sc <span class="keyword">on</span> course.cNo <span class="operator">=</span> sc.cNo</span><br><span class="line"><span class="keyword">where</span> sc.sNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> sNo</span><br><span class="line">            <span class="keyword">from</span> student</span><br><span class="line">            <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;王兵&#x27;</span>);</span><br></pre></td></tr></table></figure> 13.查询所有具有不及格课程的学生姓名、课程名与成绩； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName, course.cName, sc.score</span><br><span class="line"><span class="keyword">from</span> student, course, sc </span><br><span class="line"><span class="keyword">where</span> student.sNo <span class="operator">=</span> sc.sNo <span class="keyword">and</span> course.cNo <span class="operator">=</span> sc.cNo <span class="keyword">and</span> sc.score <span class="operator">&lt;</span> <span class="number">60</span>;</span><br></pre></td></tr></table></figure> 14.查询选修了“文学院”开设课程的所有学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> s1.sName </span><br><span class="line"><span class="keyword">from</span> student s1 </span><br><span class="line"><span class="keyword">where</span> s1.sNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> <span class="keyword">distinct</span> s2.sNo</span><br><span class="line">            <span class="keyword">from</span> student s2, sc, department, course</span><br><span class="line">            <span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;文学院&#x27;</span> <span class="keyword">and</span> course.dNo <span class="operator">=</span>department.dNo <span class="keyword">and</span> course.cNo <span class="operator">=</span> sc.cNo <span class="keyword">and</span> s2.sNo <span class="operator">=</span> sc.sNo);</span><br></pre></td></tr></table></figure> 15.查询“信息学院”所有学生姓名及其所选的“信息学院”开设的课程名称。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName, course.cName</span><br><span class="line"><span class="keyword">from</span> student, course, department, sc</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span> <span class="keyword">and</span> student.dNo <span class="operator">=</span> department.dNo <span class="keyword">and</span> course.dNo <span class="operator">=</span> department.dNo <span class="keyword">and</span> sc.sNo <span class="operator">=</span> student.sNo <span class="keyword">and</span> sc.cNo <span class="operator">=</span> course.cNo;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>包含信息学院中未选信息学院课程的学生</span><br><span class="line"><span class="keyword">select</span> student.sName, course.cName</span><br><span class="line"><span class="keyword">from</span> (student <span class="keyword">join</span> department <span class="keyword">on</span> (student.dNo <span class="operator">=</span> department.dNo)) <span class="keyword">left</span> <span class="keyword">join</span> (sc <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cNo <span class="operator">=</span> course.cNo)) <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span> <span class="keyword">and</span> (course.dNo <span class="operator">=</span> department.dNo <span class="keyword">or</span> course.dNo <span class="keyword">is</span> <span class="keyword">null</span> );</span><br></pre></td></tr></table></figure> ### <strong>四、综合</strong><br />
1.查询所有学生及其选课信息（包括没有选课的学生）； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.<span class="operator">*</span>, sc.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo);</span><br></pre></td></tr></table></figure> 2.查询“形式语言与自动机”先修课的课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName </span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> cPNo</span><br><span class="line">            <span class="keyword">from</span> course</span><br><span class="line">            <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;形式语言与自动机&#x27;</span>);</span><br></pre></td></tr></table></figure> 3.查询“形式语言与自动机”间接先修课课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> cPNo</span><br><span class="line">            <span class="keyword">from</span> course</span><br><span class="line">            <span class="keyword">where</span> cNo <span class="keyword">in</span> (<span class="keyword">select</span> cPNo</span><br><span class="line">                        <span class="keyword">from</span> course</span><br><span class="line">                        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;形式语言与自动机&#x27;</span>));</span><br></pre></td></tr></table></figure> 4.查询先修课为编译原理数学的课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cPNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> cNo</span><br><span class="line">            <span class="keyword">from</span> course</span><br><span class="line">            <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;编译原理&#x27;</span>);</span><br></pre></td></tr></table></figure> 5.查询间接先修课为离散数学的课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cPNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> cNo </span><br><span class="line">            <span class="keyword">from</span> course</span><br><span class="line">            <span class="keyword">where</span> cPNo <span class="keyword">in</span> </span><br><span class="line">                        (<span class="keyword">select</span> cNo</span><br><span class="line">                        <span class="keyword">from</span> course</span><br><span class="line">                        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>));</span><br></pre></td></tr></table></figure> 6.查询所有没有先修课的课程名称； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cName </span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> cPNo <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure> 7.查询所有没选修“形式语言与自动机”课程的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">        (<span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> sNo <span class="operator">=</span> student.sNo <span class="keyword">and</span> cNo <span class="operator">=</span> </span><br><span class="line">                                        (<span class="keyword">select</span> cNo</span><br><span class="line">                                        <span class="keyword">from</span> course</span><br><span class="line">                                        <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;形式语言与自动机&#x27;</span>));</span><br></pre></td></tr></table></figure> 8.查询所有选修了“形式语言与自动机”但没选修其先修课的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sName</span><br><span class="line"><span class="keyword">from</span> student student1, sc sc1, course course1</span><br><span class="line"><span class="keyword">where</span> course1.cName <span class="operator">=</span> <span class="string">&#x27;形式语言与自动机&#x27;</span> <span class="keyword">and</span> student1.sNo <span class="operator">=</span> sc1.sNo <span class="keyword">and</span> course1.cNo <span class="operator">=</span> sc1.cNo</span><br><span class="line"><span class="keyword">except</span> </span><br><span class="line"><span class="keyword">select</span> student2.sName</span><br><span class="line"><span class="keyword">from</span> student student2, sc sc2, course course2</span><br><span class="line"><span class="keyword">where</span> course2.cNo <span class="operator">=</span> </span><br><span class="line">                    (<span class="keyword">select</span> cPNo</span><br><span class="line">                    <span class="keyword">from</span> course</span><br><span class="line">                    <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;形式语言与自动机&#x27;</span>) <span class="keyword">and</span> student2.sNo <span class="operator">=</span> sc2.sNo <span class="keyword">and</span> sc2.cNo <span class="operator">=</span> course2.cNo;</span><br></pre></td></tr></table></figure> 9.查询选修课程总学分大于等于28的学生姓名及其选修课程总学分； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName, <span class="built_in">sum</span>(credit)</span><br><span class="line"><span class="keyword">from</span> (student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)) <span class="keyword">join</span> course <span class="keyword">on</span> (course.cNo <span class="operator">=</span> sc.cNo)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">sum</span>(credit) <span class="operator">&gt;=</span> <span class="number">28</span>;</span><br></pre></td></tr></table></figure> 10.查询选修了3门以上课程且成绩都大于85分的学生学号与姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)</span><br><span class="line"><span class="comment">--将会把有一门低于85的但有三门大于85的人选进来</span></span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> sc.score <span class="operator">&gt;</span> <span class="number">85</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(sc.cNo) <span class="operator">&gt;</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(sc.cNo) <span class="operator">&gt;</span> <span class="number">3</span> <span class="keyword">and</span> <span class="built_in">min</span>(sc.score) <span class="operator">&gt;</span> <span class="number">85</span>;</span><br></pre></td></tr></table></figure> 11.查询恰好选修了3门课并且都及格的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)</span><br><span class="line"><span class="comment">--出现问题如上一题所示</span></span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> sc.score <span class="operator">&gt;=</span> <span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(sc.cNo) <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(sc.cNo) <span class="operator">=</span> <span class="number">3</span> <span class="keyword">and</span> <span class="built_in">min</span>(sc.score) <span class="operator">&gt;=</span> <span class="number">60</span>;</span><br></pre></td></tr></table></figure> 12.查询人数多于6的学院名称及其学生人数； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> department.dName, <span class="built_in">count</span>(student.<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">from</span> department <span class="keyword">join</span> student <span class="keyword">on</span> (department.dNo <span class="operator">=</span> student.dNo)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> department.dNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(student.<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">6</span>;</span><br></pre></td></tr></table></figure> 13.查询平均成绩高于王兵的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sNo, student1.sName</span><br><span class="line"><span class="keyword">from</span> student student1 <span class="keyword">join</span> sc sc1 <span class="keyword">on</span> (student1.sNo <span class="operator">=</span> sc1.sNo)</span><br><span class="line"><span class="keyword">where</span> sc1.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student1.sNo</span><br><span class="line"><span class="keyword">having</span> (<span class="built_in">avg</span>(sc1.score) <span class="operator">&gt;</span></span><br><span class="line">                        (<span class="keyword">select</span> <span class="built_in">avg</span>(sc2.score)</span><br><span class="line">                        <span class="keyword">from</span> student student2 <span class="keyword">join</span> sc sc2 <span class="keyword">on</span> (student2.sNo <span class="operator">=</span> sc2.sNo)</span><br><span class="line">                        <span class="keyword">where</span> sc2.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> student2.sName <span class="operator">=</span> <span class="string">&#x27;王兵&#x27;</span>));</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sNo, student1.sName</span><br><span class="line"><span class="keyword">from</span> student student1 <span class="keyword">join</span> sc sc1 <span class="keyword">on</span> (student1.sNo <span class="operator">=</span> sc1.sNo)</span><br><span class="line"><span class="keyword">where</span> sc1.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student1.sNo, student1.sName</span><br><span class="line"><span class="keyword">having</span> (<span class="built_in">avg</span>(sc1.score) <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">max</span>(avgScore)</span><br><span class="line">                        <span class="keyword">from</span> (<span class="keyword">select</span> student2.sNo, student2.sName, <span class="built_in">avg</span>(sc2.score)</span><br><span class="line">						<span class="keyword">from</span> student student2 <span class="keyword">join</span> sc  sc2 <span class="keyword">on</span> student2.sNo <span class="operator">=</span> sc2.sNo</span><br><span class="line">						<span class="keyword">where</span> sc2.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">						<span class="keyword">group</span> <span class="keyword">by</span> student2.sNo, student2.sName) <span class="keyword">as</span> s_avg(sNo, sName, avgScore)</span><br><span class="line">						<span class="keyword">where</span> s_avg.sName <span class="operator">=</span> <span class="string">&#x27;王兵&#x27;</span>));</span><br></pre></td></tr></table></figure> 14.查询所有选修了离散数学并且选修了编译原理课程的学生姓名； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sName</span><br><span class="line"><span class="keyword">from</span> student student1, sc sc1, course course1</span><br><span class="line"><span class="keyword">where</span> course1.cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span> <span class="keyword">and</span> student1.sNo <span class="operator">=</span> sc1.sNo <span class="keyword">and</span> course1.cNo <span class="operator">=</span> sc1.cNo</span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> student2.sName</span><br><span class="line"><span class="keyword">from</span> student student2, sc sc2, course course2</span><br><span class="line"><span class="keyword">where</span> course2.cNo <span class="operator">=</span> </span><br><span class="line">                    (<span class="keyword">select</span> cPNo</span><br><span class="line">                    <span class="keyword">from</span> course</span><br><span class="line">                    <span class="keyword">where</span> cName <span class="operator">=</span> <span class="string">&#x27;编译原理&#x27;</span>) <span class="keyword">and</span> student2.sNo <span class="operator">=</span> sc2.sNo <span class="keyword">and</span> sc2.cNo <span class="operator">=</span> course2.cNo;</span><br></pre></td></tr></table></figure> 15.查询软件学院离散数学课程平均分； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(score)</span><br><span class="line"><span class="keyword">from</span> sc, course, student, department</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;软件学院&#x27;</span> <span class="keyword">and</span> student.dNo <span class="operator">=</span> department.dNo <span class="keyword">and</span> course.cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span> <span class="keyword">and</span> sc.cNo <span class="operator">=</span> course.cNo <span class="keyword">and</span> student.sNo <span class="operator">=</span> sc.sNo <span class="keyword">and</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure> 16.查询年龄与“软件学院”所有学生年龄都不相同学生姓名及其年龄和学院； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sName, student1.age, department1.dName</span><br><span class="line"><span class="keyword">from</span> student student1 <span class="keyword">left</span> <span class="keyword">join</span> department department1 <span class="keyword">on</span> (student1.dNo <span class="operator">=</span> department1.dNo)</span><br><span class="line"><span class="keyword">where</span> student1.age <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> student2.age</span><br><span class="line">                            <span class="keyword">from</span> student student2 <span class="keyword">left</span> <span class="keyword">join</span> department department2 <span class="keyword">on</span> (student2.dNo <span class="operator">=</span> department2.dNo)</span><br><span class="line">                            <span class="keyword">where</span> department2.dName <span class="operator">=</span> <span class="string">&#x27;软件学院&#x27;</span> <span class="keyword">and</span> student2.age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure> 17.查询各学院选修同一门课人数大于4的学院、课程及选课人数； <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> department1.dName, course1.cName, other.counts</span><br><span class="line"><span class="keyword">from</span> department department1, course course1, (<span class="keyword">select</span> student2.dNo, sc2.cNo, <span class="built_in">count</span>(student2.sNo)</span><br><span class="line">											  <span class="keyword">from</span> student student2, sc sc2</span><br><span class="line">											  <span class="keyword">where</span> student2.sNo <span class="operator">=</span> sc2.sNo</span><br><span class="line">											  <span class="keyword">group</span> <span class="keyword">by</span> student2.dNo, sc2.cNo</span><br><span class="line">											  <span class="keyword">having</span> <span class="built_in">count</span>(student2.sNo) <span class="operator">&gt;</span> <span class="number">4</span>) <span class="keyword">as</span> other(dNo, cNo, counts)</span><br><span class="line"><span class="keyword">where</span> department1.dNo <span class="operator">=</span> other.dNo <span class="keyword">and</span> course1.cNo <span class="operator">=</span> other.cNo;</span><br></pre></td></tr></table></figure> 18.查询仅仅选修了“高等数学”一门课程的学生姓名；（学号、姓名及所在学院名称） <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student1.sNo, student1.sName, department1.dName</span><br><span class="line"><span class="keyword">from</span> (student student1 <span class="keyword">join</span> sc sc1 <span class="keyword">on</span> (student1.sNo <span class="operator">=</span> sc1.sNo)) <span class="keyword">left</span> <span class="keyword">join</span> department department1 <span class="keyword">on</span> (student1.dNo <span class="operator">=</span> department1.dNo)</span><br><span class="line"><span class="keyword">where</span> sc1.sNo <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> sc2.sNo</span><br><span class="line">                    <span class="keyword">from</span> sc sc2</span><br><span class="line">                    <span class="keyword">where</span> sc2.cNo <span class="operator">&lt;&gt;</span> (<span class="keyword">select</span> course1.cNo</span><br><span class="line">                                                    <span class="keyword">from</span> course course1</span><br><span class="line">                                                    <span class="keyword">where</span> course1.cName <span class="operator">=</span> <span class="string">&#x27;高等数学&#x27;</span>));</span><br></pre></td></tr></table></figure> 19.查询平均学分积小于70分的学生姓名 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName</span><br><span class="line"><span class="keyword">from</span> (student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)) <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cNo <span class="operator">=</span> course.cNo)</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> (<span class="built_in">sum</span>(sc.score <span class="operator">*</span> course.credit) <span class="operator">/</span> <span class="built_in">sum</span>(course.credit)) <span class="operator">&lt;</span> <span class="number">70</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sName</span><br><span class="line"><span class="keyword">from</span> (student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sNo <span class="operator">=</span> sc.sNo)) <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cNo <span class="operator">=</span> course.cNo)</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">CAST</span>(<span class="built_in">sum</span>(<span class="built_in">CAST</span>(sc.score <span class="operator">*</span> course.credit <span class="keyword">AS</span> <span class="type">NUMERIC</span>)) <span class="operator">/</span> <span class="built_in">sum</span>(course.credit) <span class="keyword">AS</span> <span class="type">DECIMAL</span>(<span class="number">5</span>,<span class="number">2</span>)) <span class="operator">&lt;</span> <span class="number">70.00</span>; </span><br></pre></td></tr></table></figure> 20.查询选修了“信息学院”开设全部课程的学生姓名 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student.sName  <span class="keyword">FROM</span> student <span class="keyword">WHERE</span>  </span><br><span class="line">    <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> course.cNo <span class="keyword">FROM</span> course   </span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> sc.cNo <span class="keyword">FROM</span> sc <span class="keyword">WHERE</span> sc.sNo<span class="operator">=</span>student.sNo <span class="keyword">AND</span> sc.cNo<span class="operator">=</span>course.cNo )  </span><br><span class="line">     <span class="keyword">AND</span> course.dNo<span class="operator">=</span>(<span class="keyword">SELECT</span> department.dNo <span class="keyword">FROM</span> department <span class="keyword">WHERE</span> department.dName<span class="operator">=</span><span class="string">&#x27;信息学院&#x27;</span>) );</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sName</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> </span><br><span class="line">                (<span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">                <span class="keyword">from</span> course c</span><br><span class="line">                <span class="keyword">where</span> c.dNo <span class="keyword">in</span> </span><br><span class="line">                            (<span class="keyword">select</span> dNo</span><br><span class="line">                            <span class="keyword">from</span> department</span><br><span class="line">                            <span class="keyword">where</span> dName <span class="operator">=</span> <span class="string">&#x27;信息学院&#x27;</span>) <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span> </span><br><span class="line">                                                            (<span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">                                                            <span class="keyword">from</span> sc</span><br><span class="line">                                                            <span class="keyword">where</span> sNo <span class="operator">=</span> s.sNo <span class="keyword">and</span> cNo <span class="operator">=</span> c.cNo));</span><br></pre></td></tr></table></figure> 21.查询选修了“杨佳伟”同学所选修的全部课程的学生姓名。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sname  </span><br><span class="line"><span class="keyword">from</span> student s  </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">                (<span class="keyword">select</span> <span class="operator">*</span>  </span><br><span class="line">                <span class="keyword">from</span> sc sc2 </span><br><span class="line">                <span class="keyword">where</span> sc2.sno<span class="operator">=</span></span><br><span class="line">                                (<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;杨佳伟&#x27;</span>)  </span><br><span class="line"><span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">                (<span class="keyword">select</span> <span class="operator">*</span>  </span><br><span class="line">                <span class="keyword">from</span> sc sc3  </span><br><span class="line">                <span class="keyword">where</span> s.sno<span class="operator">=</span>sc3.sno <span class="keyword">and</span> sc2.cno<span class="operator">=</span>sc3.cno))  </span><br><span class="line"><span class="keyword">and</span> s.sname<span class="operator">&lt;&gt;</span><span class="string">&#x27;杨佳伟&#x27;</span>; </span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sName</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sNo <span class="keyword">in</span> </span><br><span class="line">            (<span class="keyword">select</span> <span class="keyword">distinct</span> sNo</span><br><span class="line">            <span class="keyword">from</span> sc scx</span><br><span class="line">            <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> </span><br><span class="line">                            (<span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line">                            <span class="keyword">from</span> sc scy</span><br><span class="line">                            <span class="keyword">where</span> scy.sNo <span class="operator">=</span> </span><br><span class="line">                                            (<span class="keyword">select</span> sNo</span><br><span class="line">                                            <span class="keyword">from</span> student</span><br><span class="line">                                            <span class="keyword">where</span> sName <span class="operator">=</span> <span class="string">&#x27;杨佳伟&#x27;</span>) <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span> </span><br><span class="line">                                                                            (<span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">                                                                            <span class="keyword">from</span> sc scz</span><br><span class="line">                                                                            <span class="keyword">where</span> scz.sNo <span class="operator">=</span> scx.sNo <span class="keyword">and</span> scz.cNo <span class="operator">=</span> scy.cNo)));</span><br></pre></td></tr></table></figure> ## DDL练习<br />
1.创建2张表，信息如下：<br />
图书（编号，书名，作者，ISBN，出版社编号，版本，出版日期）。主码为编号，ISBN唯一。 出版社编号为外码，参照出版社编号。<br />
出版社（编号，名称，地址，电话）。主码为编号。<br />
要求：<br />
(1)创建表的同时创建约束；<br />
(2)删除所创建的表;<br />
(3)重新创建表，在表创建之后增加约束。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--drop table book cascade</span></span><br><span class="line"><span class="comment">--drop table publisher cascade  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> publisher(</span><br><span class="line">    pNo             <span class="type">varchar</span>(<span class="number">20</span>)     <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	pName           <span class="type">varchar</span>(<span class="number">200</span>),		</span><br><span class="line">	address         <span class="type">varchar</span>(<span class="number">200</span>),</span><br><span class="line">	TEL             <span class="type">varchar</span>(<span class="number">200</span>),</span><br><span class="line">	<span class="keyword">primary</span> key(pNo)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> book (</span><br><span class="line">    bNo         <span class="type">char</span>(<span class="number">12</span>)		<span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">	bName		<span class="type">varchar</span>(<span class="number">200</span>)	<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	author  	<span class="type">varchar</span>(<span class="number">200</span>)	<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	ISBN		<span class="type">varchar</span>(<span class="number">200</span>)	<span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">	pNo             <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">	bVersion	<span class="type">char</span>(<span class="number">6</span>),</span><br><span class="line">	bDate		<span class="type">date</span>,</span><br><span class="line">	<span class="keyword">primary</span> key(bNo),</span><br><span class="line">	<span class="keyword">foreign</span> key(pNo) <span class="keyword">references</span> publisher(pNo)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> publisher(</span><br><span class="line">	pNo             <span class="type">varchar</span>(<span class="number">20</span>)		<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	pName           <span class="type">varchar</span>(<span class="number">200</span>),		</span><br><span class="line">	address         <span class="type">varchar</span>(<span class="number">200</span>),</span><br><span class="line">	TEL             <span class="type">varchar</span>(<span class="number">200</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> book (</span><br><span class="line">	bNo         <span class="type">char</span>(<span class="number">12</span>)        <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">	bName       <span class="type">varchar</span>(<span class="number">200</span>)    <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	author      <span class="type">varchar</span>(<span class="number">200</span>)    <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	ISBN        <span class="type">varchar</span>(<span class="number">200</span>)    <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">	pNo         <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">	bVersion    <span class="type">char</span>(<span class="number">6</span>),</span><br><span class="line">	bDate       <span class="type">date</span>,</span><br><span class="line">	<span class="keyword">primary</span> key(bNo)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> publisher <span class="keyword">add</span> <span class="keyword">primary</span> key(pNo);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> book <span class="keyword">add</span> <span class="keyword">foreign</span> key(pNo) <span class="keyword">references</span> publisher(pNo);</span><br></pre></td></tr></table></figure> 2.分别向两张表中各插入2行数据。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> publisher <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span>, <span class="string">&#x27;机械工业出版社&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;110&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> publisher <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span>, <span class="string">&#x27;高等教育出版社&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;120&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book <span class="keyword">values</span>(<span class="string">&#x27;10086&#x27;</span>, <span class="string">&#x27;算法导论&#x27;</span>, <span class="string">&#x27;Thomas&#x27;</span>, <span class="string">&#x27;9787040370683&#x27;</span>, <span class="string">&#x27;01&#x27;</span>, <span class="string">&#x27;1.0&#x27;</span>, to_date(<span class="string">&#x27;2017-01-08&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book <span class="keyword">values</span>(<span class="string">&#x27;10000&#x27;</span>, <span class="string">&#x27;离散数学&#x27;</span>, <span class="string">&#x27;Pony&#x27;</span>, <span class="string">&#x27;9787040370688&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="string">&#x27;16.3&#x27;</span>, to_date(<span class="string">&#x27;2018-01-08&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>));</span><br></pre></td></tr></table></figure> 3.将其中一个出版社地址变更一下。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> publisher</span><br><span class="line"><span class="keyword">set</span> address <span class="operator">=</span> <span class="string">&#x27;陕西&#x27;</span></span><br><span class="line"><span class="keyword">where</span> pNo <span class="operator">=</span> <span class="string">&#x27;01&#x27;</span>;</span><br></pre></td></tr></table></figure> 4.删除所插入数据。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span></span><br><span class="line">book cascade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span></span><br><span class="line"><span class="keyword">from</span> publisher cascade; </span><br></pre></td></tr></table></figure> 5.创建一个软件学院所有选修了“离散数学”课程的学生视图，并通过视图插入一行数据。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--drop view other cascade;</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> other</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> student.sNo <span class="operator">=</span> sc.sNo <span class="keyword">join</span> course <span class="keyword">on</span> sc.cNo <span class="operator">=</span> course.cNo <span class="keyword">join</span> department <span class="keyword">on</span> student.dNo <span class="operator">=</span> department.dNo</span><br><span class="line"><span class="keyword">where</span> department.dName <span class="operator">=</span> <span class="string">&#x27;软件学院&#x27;</span> <span class="keyword">and</span> course.cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>;</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> other cascade;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> other</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">SELECT</span> student.sNo, student.sName</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> student.dNo <span class="keyword">in</span></span><br><span class="line">                    (<span class="keyword">SELECT</span> department.dNo</span><br><span class="line">                    <span class="keyword">FROM</span> department</span><br><span class="line">                    <span class="keyword">WHERE</span> department.dName <span class="operator">=</span> <span class="string">&#x27;软件学院&#x27;</span>) <span class="keyword">and</span> student.sNo <span class="keyword">in</span> </span><br><span class="line">                                                                        (<span class="keyword">SELECT</span> sc.sNo</span><br><span class="line">                                                                        <span class="keyword">FROM</span> sc</span><br><span class="line">                                                                        <span class="keyword">where</span> sc.sNo <span class="operator">=</span> student.sNo <span class="keyword">and</span> sc.cNo <span class="keyword">in</span> </span><br><span class="line">                                                                                                                (<span class="keyword">SELECT</span> course.cNo</span><br><span class="line">                                                                                                                <span class="keyword">FROM</span> course</span><br><span class="line">                                                                                                                <span class="keyword">WHERE</span> course.cName <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>));</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span></span><br><span class="line"><span class="keyword">into</span> other</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;170288&#x27;</span>, <span class="string">&#x27;李天一&#x27;</span>);</span><br></pre></td></tr></table></figure> 6.创建一个各门课程平均分视图。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> AVERAGE;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> AVERAGE <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> sc.cNo, course.cName, <span class="built_in">avg</span>(sc.score)</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">join</span> sc <span class="keyword">on</span> course.cNo <span class="operator">=</span> sc.cNo</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.cNo, course.cName;</span><br></pre></td></tr></table></figure> 7.创建一张学生平均成绩表s_score(sNo,sName,avgscore),并通过子查询插入所有学生数据。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--drop view s_score;</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> s_score <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> student.sNo, student.sName, <span class="built_in">avg</span>(sc.score)</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> student.sNo <span class="operator">=</span> sc.sNo</span><br><span class="line"><span class="keyword">where</span> sc.score <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student.sNo, student.sName</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> s_score;</span><br></pre></td></tr></table></figure> ## DCL<br />
尝试将多条SQL语句组成一个事务执行，体验提交和回滚操作。 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">begin</span> transaction;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>xv6-riscv环境搭建</title>
    <url>/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="docker环境配置">Docker环境配置</h1>
<p>xv6-riscv 是MIT 6.S081课程使用的一个操作系统，其实验课是通过修改xv6内核来实现相应的功能，对于实验的第一步就是把环境搭建好，运行xv6，本身使用的是Mac，在最开始的时候打算使用Mac原生的环境，但是因为目前在brew的包管理器中，qemu的版本太高，在官网上也提示了会因为qemu的问题导致xv6运行失败，会一直卡在系统的启动那边，遂放弃，转向Docker进行环境配置。</p>
<span id="more"></span>
<p>使用的是Ubuntu镜像，使用Docker命令，获取docker命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>
<p>使用<code>docker images</code> 命令可以看到你的系统中现存的docker所有镜像</p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/docker_images.png" class="">
<p>使用-v命令使得镜像可以共享主机的文件夹，其中{container name}为你要命名该运行容器的名字，{host dir}为主机的文件夹名称，{docker dir} 为Docker容器的文件夹名称</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -itd --name=&#123;container name&#125; -v &#123;host dir&#125;:&#123;docker dir&#125; ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>运行该命令后便进入shell控制台上，在后续的docker使用中，可以直接使用 <code>docker start &#123;container name&#125;</code>或者使用如下命令<code>docker ps -a</code>查看所有Docker镜像，然后将上述的{container name} 换成 {container id} 再通过 <code>docker exec -it &#123;container id&#125; /bin/bash</code> 进入Docker容器中，步骤如下图所示：</p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/docker_run.png" class="">
<p>运行如下命令，安装编译链</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install gcc-riscv64-unknown-elf git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu</span><br></pre></td></tr></table></figure>
<p>检查环境是否安装成功，运行<code>riscv64-unknown-elf-gcc --version</code> 与 <code>qemu-system-riscv64 --version</code>，切记在Fall 2020的课程中，qemu的版本不能太高，否则会卡死，这个bug目前还没解决，至此所有的依赖环境都安装完毕 <img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/envs.png" class=""></p>
<p>使用<code>git clone git://g.csail.mit.edu/xv6-labs-2020</code> 将实验代码拷贝下来，进入xv6代码目录中，切换分支<code>git checkout util</code>分支，键入 <code>make qemu</code>，出现下图所示的的内容，则运行成功，若要退出系统，按住键盘 ctrl+a 组合建，然后放开，再按x。</p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/xv6_run.png" class="">
<h1 id="简单调试方法">简单调试方法</h1>
<p>简单查看xv6的目录结构，主要的文件夹是 &gt;&gt;&gt; kernel &gt;&gt;&gt; mkfs &gt;&gt;&gt; user</p>
<p>其中kernel文件夹就是存放内核代码，你要为xv6系统添加新功能就在这个文件夹下修改，user就是存放用户态的代码，会进行系统调用之类的操作。</p>
<p>在写代码中，推荐使用VS Code编辑器，调试的话，使用gdb，这个gdb也是接触这个课后才使用，记录下常用命令。</p>
<p>对于调试输入<code>make qemu-gdb</code> 在同一文件夹下另开一个窗口输入 <code>gdb-multiarch -q kernel/kernel</code>，在VS Code中有终端拆分的功能，比较方便。</p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/kernel_debug.png" class="">
<p>对于在内核的代码，可以直接在main函数上打断点，可以看见是在kernel/main.c文件中，这样看很别扭，无法直观看到现在的代码执行到哪，别担心，gdb提供了简单的可视化功能，输入<code>layout split</code></p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/layout_split.png" class="">
<p>上半部分显示的为源代码，下半部分显示的是每一条指令，在调试中next是逐行运行，nexti是逐指令运行，step是进入改行代码，stepi类似，finish便是结束在该函数中运行，b是进行打断点，可以是行号或函数名，c是运行到下一个断点，大致的调试过程表示这样。</p>
<p>要调试user中的代码，则需要进行新的步骤，要定位到运行的文件，查看user文件夹中源文件，可以看见所有的文件都有一个main函数，需要进行file user/_ls，这里以ls函数为例，xv6中将所有的shell命令都编译为前带下划线的二进制文件，甚于步骤与上述的一致，详细见下图序号。</p>
<img src="/2021/08/17/xv6-riscv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/user_debug.png" class="">
<h1 id="其他可能出现的问题">其他可能出现的问题</h1>
<ul>
<li><p>python 环境问题，因为是Python3 需要添加软链接<code>ln -s /usr/bin/python3 /usr/bin/python</code></p></li>
<li><p>trap 课程中stepi不能用，需要对.gdbinit.tmpl-riscv 增加 set riscv use-compressed-breakpoints yes，然后<code>p/x $stvec</code>会显示一个地址，在该地址处打断点 接着进行stepi即可</p></li>
<li><p>使用的bash shell配置</p></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">~/.bashrc: executed by bash(1) <span class="keyword">for</span> non-login shells.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">see /usr/share/doc/bash/examples/startup-files (<span class="keyword">in</span> the package bash-doc)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> examples</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If not running interactively, don<span class="string">&#x27;t do anything</span></span></span><br><span class="line">[ -z &quot;$PS1&quot; ] &amp;&amp; return</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">don&#x27;</span>t put duplicate lines <span class="keyword">in</span> the <span class="built_in">history</span>. See bash(1) <span class="keyword">for</span> more options</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">... or force ignoredups and ignorespace</span></span><br><span class="line">HISTCONTROL=ignoredups:ignorespace</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">append to the <span class="built_in">history</span> file, don<span class="string">&#x27;t overwrite it</span></span></span><br><span class="line">shopt -s histappend</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">for setting history length see HISTSIZE and HISTFILESIZE in bash(1)</span></span></span><br><span class="line">HISTSIZE=1000</span><br><span class="line">HISTFILESIZE=2000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">check the window size after each command and, if necessary,</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">update the values of LINES and COLUMNS.</span></span></span><br><span class="line">shopt -s checkwinsize</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">make less more friendly for non-text input files, see lesspipe(1)</span></span></span><br><span class="line">[ -x /usr/bin/lesspipe ] &amp;&amp; eval &quot;$(SHELL=/bin/sh lesspipe)&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">set variable identifying the chroot you work in (used in the prompt below)</span></span></span><br><span class="line">if [ -z &quot;$debian_chroot&quot; ] &amp;&amp; [ -r /etc/debian_chroot ]; then</span><br><span class="line">    debian_chroot=$(cat /etc/debian_chroot)</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">set a fancy prompt (non-color, unless we know we &quot;want&quot; color)</span></span></span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">    xterm-color) color_prompt=yes;;</span><br><span class="line">esac</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">uncomment for a colored prompt, if the terminal has the capability; turned</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">off by default to not distract the user: the focus in a terminal window</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">should be on the output of commands, not on the prompt</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">force_color_prompt=yes</span></span></span><br><span class="line"></span><br><span class="line">if [ -n &quot;$force_color_prompt&quot; ]; then</span><br><span class="line">    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then</span><br><span class="line">        # We have color support; assume it&#x27;s compliant with Ecma-48</span><br><span class="line">        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such</span><br><span class="line">        # a case would tend to support setf rather than setaf.)</span><br><span class="line">        color_prompt=yes</span><br><span class="line">    else</span><br><span class="line">        color_prompt=</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;$color_prompt&quot; = yes ]; then</span><br><span class="line">    PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &#x27;</span><br><span class="line">else</span><br><span class="line">    PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &#x27;</span><br><span class="line">fi</span><br><span class="line">unset color_prompt force_color_prompt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">If this is an xterm set the title to user@host:dir</span></span></span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">xterm*|rxvt*)</span><br><span class="line">    PS1=&quot;\[\e]0;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h: \w\a\]$PS1&quot;</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">enable color support of ls and also add handy aliases</span></span></span><br><span class="line">if [ -x /usr/bin/dircolors ]; then</span><br><span class="line">    test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot;</span><br><span class="line">    alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">    #alias dir=&#x27;dir --color=auto&#x27;</span><br><span class="line">    #alias vdir=&#x27;vdir --color=auto&#x27;</span><br><span class="line"></span><br><span class="line">    alias grep=&#x27;grep --color=auto&#x27;</span><br><span class="line">    alias fgrep=&#x27;fgrep --color=auto&#x27;</span><br><span class="line">    alias egrep=&#x27;egrep --color=auto&#x27;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">some more ls aliases</span></span></span><br><span class="line">alias ll=&#x27;ls -alF&#x27;</span><br><span class="line">alias la=&#x27;ls -A&#x27;</span><br><span class="line">alias l=&#x27;ls -CF&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Alias definitions.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">You may want to put all your additions into a separate file like</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">~/.bash_aliases, instead of adding them here directly.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">See /usr/share/doc/bash-doc/examples in the bash-doc package.</span></span></span><br><span class="line"></span><br><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">    . ~/.bash_aliases</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">enable programmable completion features (you don&#x27;</span>t need to <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">this, <span class="keyword">if</span> it<span class="string">&#x27;s already enabled in /etc/bash.bashrc and /etc/profile</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">sources /etc/bash.bashrc).</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">if [ -f /etc/bash_completion ] &amp;&amp; ! shopt -oq posix; then</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">   . /etc/bash_completion</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">fi</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">git branch</span></span></span><br><span class="line">function git_branch &#123;</span><br><span class="line">  branch=&quot;`git branch 2&gt;/dev/null | grep &quot;^\*&quot; | sed -e &quot;s/^\*\ //&quot;`&quot;</span><br><span class="line">  if [ &quot;$&#123;branch&#125;&quot; != &quot;&quot; ];then</span><br><span class="line">      if [ &quot;$&#123;branch&#125;&quot; = &quot;(no branch)&quot; ];then</span><br><span class="line">          branch=&quot;(`git rev-parse --short HEAD`...)&quot;</span><br><span class="line">      fi</span><br><span class="line">      echo &quot; ($branch)&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">终端显示路径</span></span></span><br><span class="line">export PS1=&#x27;\u@\[\033[01;36m\]\W\[\033[01;32m\]$(git_branch)\[\033[00m\]\$ &#x27;</span><br></pre></td></tr></table></figure>
<h1 id="相关资料">相关资料</h1>
<ul>
<li><a href="https://b23.tv/RHDDif">B站课程</a>，中英文字幕</li>
<li><a href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-s081/">课程翻译 网页版</a></li>
<li><a href="https://github.com/huihongxiao/MIT6.S081">课程翻译 GitHub</a></li>
</ul>
]]></content>
      <tags>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用DigitalOcean服务器进行网络代理</title>
    <url>/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<p>在学习了计算机网络，其中有一章为网络代理，什么是网络代理？打个比喻就是相当与两个人在对话，但他们中间隔着一堵墙，导致这两个人的对话出现障碍，但是刚好有个“幽灵”，它可以透过这堵墙，将两个人的聊天信息转发给对方。通过这个“幽灵”这两个人就可以正常聊天，不会受到这个墙的影响。</p>
<span id="more"></span>
<p>现在你在上网，刚好要访问一个放在远程服务器的网页，此时你的电脑和远程的服务器相当于上述两个聊天的人，但是由于距离太远，相当于一堵墙，此时需要一个“幽灵”来帮助你们之间的信息传输。在此使用DigitalOcean的服务器来实现“幽灵”的功能，也就是网络代理。</p>
<h1 id="注册digitalocean账号">注册DigitalOcean账号</h1>
<p>首先去<a href="https://m.do.co/c/ac9819294f16">DigitalOcean</a>上去注册账号,就会送你10美元，现在政策好像改为100刀60天使用权了。登入之后看到如下界面，点击Create<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR_2018-07-15_23-06-00.png" class=""><br />
之后选择Droplets<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR1_2018-07-15_23-09-54.png" class=""><br />
接着选择CentOS操作系统，再选择服务器的型号，如果你的网络地址支持IPv6的话，还可以添加上IPv6的地址<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR2_2018-07-15_23-12-38.png" class=""><br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR3_2018-07-15_23-13-08.png" class=""><br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR4_2018-07-15_23-13-47.png" class=""></p>
<p>在选择好上述选项后点击确认创建，之后DigitalOcean就会给你发送邮件,里面有该服务器的IP地址，用户名和用户密码<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR4_2018-07-15_23-21-46.png" class=""></p>
<p>在Windows下通过<a href="https://xshell.en.softonic.com/?ex=DSK-1262.6">Xshell</a>来连接到远程的服务器，新建一个会话，输入服务器IP地址，确认后，在连接成功后就可以输入用户名和密码进行连接<br />
<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR7_2018-07-16_19-16-15.png" class=""><br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR8_2018-07-16_19-27-52.png" class=""></p>
<p>如果电脑上有安装Git或者Bash Shell可以支持SSH连接的命令行工具的话，可以使用<code>ssh 用户名@IP地址</code>，该教程下，用户名为root，IP地址DigitalOcean提供，在建立连接之后，才会让你输入密码。</p>
<h1 id="bbr-加速">BBR 加速</h1>
<p>首先进行BBR加速，输入<br />
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure></p>
<p>如果这个命令运行有问题的话，将这个命令拆成三个命令运行<br />
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x bbr.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一些Linux系统在最初命令可能会不全，需要下载相应的命令，在这个安装过程中，用到的<code>wget</code>这个命令可能会缺失，如果是RedHat系的Linux系统，使用<code>yum install wget</code>，如果是Debian系，使用<code>apt install wget</code>，本文使用的是CentOS，属于RedHat系的，使用第一个命令行就可以进行安装。</p>
</blockquote>
<p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令： <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure> 返回值为<br />
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure> 输入 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure> 返回值为 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br></pre></td></tr></table></figure> &gt;返回值有 tcp_bbr 模块即说明 bbr 已启动。注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。</p>
<h1 id="shadowsocksr-安装">ShadowsocksR 安装</h1>
<p>输入 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh</span><br></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x shadowsocksR.sh   </span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./shadowsocksR.sh </span><br></pre></td></tr></table></figure>
<p>上面的3行代码要依次复制然后粘贴到ssh里，运行后出现如下界面，可以自己设置密码，否则服务器采用默认的密码<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR9_2018-07-16_19-34-46.png" class=""><br />
设置端口<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR10_2018-07-16_19-35-55.png" class=""><br />
设置加密协议，一般采用默认值<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR11_2018-07-16_19-36-34.png" class=""><br />
设置协议和混淆参数，一般情况下使用默认值<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR11_2018-07-16_19-37-15.png" class=""><br />
配置完后，安装ShadowsocksR并显示出当前配置好的参数<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR12_2018-07-16_19-40-30.png" class=""><br />
进入配置文件，将IPv6的参数改为“true”，这样就可以使用IPv6的通道<br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR13_2018-07-16_19-49-47.png" class=""><br />
<img src="/2019/03/20/%E4%BD%BF%E7%94%A8DigitalOcean%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/SSR14_2018-07-16_19-50-58.png" class=""><br />
然后输入<br />
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure> 可以查看 ShadowsocksR 进程是否已经启动如果显示 running表示已经启动。</p>
<p>这样就实现了“幽灵”这一角色的功能，最后只要在自己的客户端上安装ShadowsocksR就可以使用了，这样就完成了网络代理了。</p>
]]></content>
      <tags>
        <tag>Proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库关系代数练习</title>
    <url>/2019/01/21/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<p>现在有关系模式如下所示： <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Department(dNo,dName,officeRoom,homePage)</span><br><span class="line">Student(sNo,sName,sex,age,dNo)</span><br><span class="line">Course(cNo,cName,cPNo,credit,dNo)</span><br><span class="line">SC(sNo,cNo,score,recorddate)</span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<h3 id="一基本查询"><strong>一、基本查询</strong></h3>
<ol type="1">
<li>查询所有年龄小于18岁的男生姓名<br />
<span class="math display">\[\pi_{sname}(\sigma_{age&lt;18\bigwedge sex=&#39;man&#39;}(student))\]</span><br />
</li>
<li>查询所有学分大于3的课程名称<br />
<span class="math display">\[\pi_{cname}(\sigma_{credit&gt;3}(course))\]</span></li>
<li>查询所有没有先修课的课程名称<br />
<span class="math display">\[\pi_{cname}(\sigma_{cPNo\  is\  null}(course))\]</span></li>
</ol>
<h3 id="二连接查询"><strong>二、连接查询</strong></h3>
<ol type="1">
<li>查询“信息学院”所有学生姓名<br />
<span class="math display">\[\pi_{sname}((\sigma_{dname=&#39;\text{信息学院}&#39;}(department))\Join student)\]</span><br />
</li>
<li>查询所有具有不及格记录的学生姓名<br />
<span class="math display">\[\pi_{sname}((\sigma_{score&lt;60}(SC))\Join student)\]</span><br />
</li>
<li>查询“信息学院”所有年龄小于18岁的女生姓名<br />
<span class="math display">\[\pi_{sname}((\sigma_{age&lt;18\bigwedge sex=&#39;female&#39;}(student))\Join (\sigma_{dname=&#39;\text{信息学院}&#39;}(department)))\]</span><br />
</li>
<li>查询所有选修了“数据库”课程的学生姓名<br />
<span class="math display">\[\pi_{sname}(\pi_{cno}(\pi_{cname=&#39;\text{数据库}&#39;}(course))\Join SC \Join student)\]</span><br />
</li>
<li>查询“信息学院”所有选修了“科学技术简史”课程的学生姓名<br />
<span class="math display">\[\pi_{sname}(\pi_{sno}(\sigma_{cname=&#39;\text{科学技术简史}&#39;}(course))\Join SC\Join student \Join(\pi_{cname=&#39;\text{信息学院}&#39;}(department)))\]</span><br />
</li>
<li>查询选修了“数据结构”课程并且不及格的学生姓名<br />
<span class="math display">\[\pi_{sname}(\pi_{cno}(\sigma_{cname=&#39;\text{数据结构}&#39;}(course))\Join (\sigma_{credit&lt;60}(SC))\Join student)\]</span><br />
</li>
<li>查询“计算机学院”选修了“概率论”课程且成绩大于等于80分的学生姓名<br />
<span class="math display">\[\pi_{sname}((\sigma_{dname=&#39;\text{计算机学院}&#39;}\Join \pi_{cno}(\sigma_{cname=&#39;\text{概率论}&#39;}(course))\Join (\sigma_{score\geq 80}(SC))\Join student)\]</span><br />
</li>
<li>查询“文学院”开设的所有学分大于等于3的课程名称<br />
<span class="math display">\[\pi_{cname}((\sigma_{dname=&#39;\text{文学院}&#39;}(department))\Join \sigma_{credit \geq 3}(course)))\]</span><br />
</li>
<li>查询“信息学院”所有选修了“数据库”课程并且不及格的学生姓名及分数<br />
<span class="math display">\[\pi_{sname,score}((\sigma_{dname=&#39;\text{信息学院}&#39;}(department))\Join (\pi_{cno}(\sigma_{cname=&#39;\text{数据库}&#39;}(course)))\Join (\sigma_{score&lt;60}(SC))\Join student)\]</span><br />
</li>
<li>查询“王强”同学所选修的全部课程名称、学分以及开课学院。<br />
<span class="math display">\[\pi_{cname,credit,dname}(\pi_{cno}(\sigma_{sname=&#39;\text{王强}&#39;}(student)\Join SC)\Join course \Join department)\]</span></li>
</ol>
<h3 id="三综合查询"><strong>三、综合查询</strong></h3>
<ol type="1">
<li>查询选修了“数据库”或者选修了“算法”课程的学生姓名<br />
<span class="math display">\[\pi_{sname}(\sigma_{cname=&#39;\text{数据库}&#39;\bigvee cname=&#39;\text{算法}&#39;}(course))\Join SC \Join student)\]</span><br />
</li>
<li>查询选修了“数据库”并且选修了“算法”课程的学生姓名<br />
<span class="math display">\[\pi_{sname((\pi_{sno,cno}(SC)\div(\sigma_{cname=&#39;\text{数据库}&#39;}\bigwedge cname=&#39;\text{算法}&#39;}(course))\Join student)\]</span><br />
</li>
<li>查询选修了“数据库”但没有选修“算法”课程的学生姓名<br />
<span class="math display">\[\pi_{sname}((\pi_{sno}(\sigma_{cname=&#39;\text{数据库}&#39;}(course))\Join SC)-(\pi_{sno}(\sigma_{cname=&#39;\text{算法}&#39;}(course))\Join SC))\Join student)\]</span><br />
</li>
<li>查询没有选修“算法”课程的学生姓名<br />
<span class="math display">\[\pi_{sname}(student)-\pi_{sname}(\sigma_{cname=&#39;\text{算法}&#39;}(course)\Join SC \Join student)\]</span><br />
</li>
<li>查询仅仅选修了“算法”一门课程的学生姓名<br />
<span class="math display">\[\pi_{sname}((\pi_{sno}(SC)-\pi_{sno}(\pi_{cname&lt;&gt;&#39;\text{算法}&#39;}(course)\Join SC))\Join student)\]</span><br />
</li>
<li>查询选修了“信息学院”开设的所有课程的学生姓名<br />
<span class="math display">\[\pi_{cno,sname}(SC\Join student)\div\pi_{cno}((\sigma_{dname=&#39;\text{信息学院}&#39;}(department))\Join course)\]</span><br />
</li>
<li>查询选修了所有学分大于3课程的学生姓名<br />
<span class="math display">\[\pi_{sname}(\pi_{cno,sno}(SC)\div\pi_{cno}(\sigma_{credit&gt;3}(course))\Join student)\]</span><br />
</li>
<li>查询“数据库”课程所有不及格学生姓名及所在学院<br />
<span class="math display">\[\pi_{sname,dname}((\pi_{sno}(\sigma_{cname=&#39;\text{数据库}&#39;}(course)\Join \sigma_{score&lt;60}(SC))\Join student\Join department))\]</span><br />
</li>
<li>查询“数据库”先修课的课程名称<br />
<span class="math display">\[\pi_{cname}(\pi_{cpno}(\sigma{cname=&#39;\text{数据库}&#39;}(course \ \  AS\ \  C1)){\mathop \Join\limits_{C1.cpno=C2.cno}}(course\ \  AS\ \  C2))\]</span><br />
</li>
<li>查询先修课为“数据库”的课程名称<br />
<span class="math display">\[\pi_{cname}(\pi_{cpno}(\sigma{cname=&#39;\text{数据库}&#39;}(course \ \  AS\ \  C1)){\mathop \Join\limits_{C1.cno=C2.cpno}}(course\ \  AS\ \  C2))\]</span></li>
</ol>
]]></content>
      <tags>
        <tag>数据库关系代数</tag>
      </tags>
  </entry>
  <entry>
    <title>本科课程</title>
    <url>/2019/09/03/%E6%9C%AC%E7%A7%91%E8%AF%BE%E7%A8%8B/</url>
    <content><![CDATA[<p>大学四年学习的课程个人认为基础数学课程与专业课程相当重要，顺手整理了一下大概的课程，下述是相应的课程图，在选修课中只选择了部分，对于其他的课程是从同学和对应的培养方案中获取的，并没有深入学习，如果有出入请在评论下指出，非常感谢。同时也在GitHub上收集这些课程的相关资料<a href="https://github.com/GroverZhu/SoftwareEngineeringCoursesNWPU">🔗</a></p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    Software[软件工程] --&gt; Math[基础数学课]</span><br><span class="line">    Software[软件工程] --&gt; SoftwareEngineering[软件工程课程]</span><br><span class="line"></span><br><span class="line">    Math --&gt; HigherMathematics[高等数学上/下]</span><br><span class="line">    Math --&gt; LinearAlgebra[线性代数]</span><br><span class="line">    Math --&gt; ComputationalMethods[计算方法]</span><br><span class="line">    Math --&gt; ProbabilityTheoryAndMathematicalStatistics[概率论与数理统计]</span><br><span class="line">    Math --&gt; ComplexFunctionAndIntegralTransformation[复变函数与积分变化]</span><br><span class="line">    Math --&gt; DiscreteMathematics[离散数学]</span><br><span class="line">    Math --&gt; SignalAndSystem[信号与系统]</span><br><span class="line"></span><br><span class="line">    SoftwareEngineering --&gt; Required[专业必修课程]</span><br><span class="line">    Required --&gt; Elementary[基础课程]</span><br><span class="line">    Elementary --&gt; C++[C++程序设计]</span><br><span class="line">    Elementary --&gt; DataStruct[数据结构]</span><br><span class="line">    Elementary --&gt; IntroductionForElectronicTechnology[电子技术导论]</span><br><span class="line">    Elementary --&gt; Java[面向对象编程与设计Java]</span><br><span class="line">    Elementary --&gt; PrinciplesOfComputerOrganization[计算机组成原理]</span><br><span class="line">    Elementary--&gt; ComputerOperatingSystem[计算机操作系统]</span><br><span class="line">    Elementary --&gt; DatabaseSystems[数据库系统]</span><br><span class="line">    Elementary --&gt; ComputerNetworks[计算机网络]</span><br><span class="line"></span><br><span class="line">    Required --&gt; CoreCourses[核心课程]</span><br><span class="line">    CoreCourses --&gt; UI[用户界面设计]</span><br><span class="line">    CoreCourses --&gt; SoftwareRequirementsEngineering[软件需求工程]</span><br><span class="line">    CoreCourses --&gt; ApplicationDevelop[网页开发/安卓开发]</span><br><span class="line">    CoreCourses --&gt; NetworkingAndDistributedComputing[网络与分布计算]</span><br><span class="line">    CoreCourses --&gt; SoftwareProjectOrganizationAndManagement[软件项目组织与管理]</span><br><span class="line">    CoreCourses --&gt; SoftwareTesting[软件测试]</span><br><span class="line">    CoreCourses --&gt; TheDesignAndAnalysisOfAlgorithms[算法分析与设计]</span><br><span class="line">    CoreCourses --&gt; SoftwareEngineeringDocumentWriting[软件工程文档写作]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SoftwareEngineering --&gt; Optional[专业选修课程]</span><br><span class="line"></span><br><span class="line">    Optional --&gt; SoftwareSystemDevelopment[软件系统开发]</span><br><span class="line"></span><br><span class="line">    SoftwareSystemDevelopment --&gt; AdvancedTopicsOfSoftwareSystemDevelopment[软件系统开发方向前沿课程]</span><br><span class="line">    SoftwareSystemDevelopment --&gt;  ModernSoftwareEngineering[现代软件工程]</span><br><span class="line">    SoftwareSystemDevelopment --&gt;  EnterpriseApplicationDevelopmentTechnology[企业级应用软件开发技术JavaEE]</span><br><span class="line">    SoftwareSystemDevelopment --&gt; SoftwareArchitectureDesign[软件架构设计]</span><br><span class="line"></span><br><span class="line">    Optional --&gt; DigitalMedia[数字媒体]</span><br><span class="line"></span><br><span class="line">    DigitalMedia --&gt; AdvancedTopicsOfDigitalMedia[数字媒体方向前沿课程]</span><br><span class="line">    DigitalMedia --&gt; DigitalMediaTechnology[数字媒体技术]</span><br><span class="line">    DigitalMedia --&gt; ComputerGraphicsPrinciplesAndPractice[计算机图形学原理与实践]</span><br><span class="line">    DigitalMedia --&gt; DigitalImageProcessing[数字图像处理]</span><br><span class="line"></span><br><span class="line">    Optional --&gt; ElectronicService[电子服务]</span><br><span class="line">    ElectronicService --&gt; AdvancedTopicsOfElectronicServices[电子服务方向前沿课程]</span><br><span class="line">    ElectronicService --&gt; E-ServiceSystemDesign[电子服务系统设计]</span><br><span class="line">    ElectronicService --&gt; IntroductionToServiceScience&amp;Engineering[服务科学与工程概论]</span><br><span class="line">    ElectronicService --&gt; IntroductionToBusinessIntelligence[商业智能导论]</span><br><span class="line"></span><br><span class="line">    Optional --&gt; Unlimited[任选课程]</span><br><span class="line">    Unlimited --&gt; FundamentalsOfCompiler[编译原理]</span><br><span class="line">    Unlimited --&gt; ModelDrivenSoftwareDevelopmentMethod[模型驱动的软件开发方法]</span><br><span class="line">    Unlimited --&gt;  NetworkAndInformationSecurity[网络与信息安全]</span><br><span class="line">    Unlimited --&gt; ComputationalIntelligenceMethod[计算智能方法]</span><br><span class="line">    Unlimited --&gt; NetworkTheoryAndPractice[网络技术与实践]</span><br><span class="line">    Unlimited --&gt; MachineLearningAndApplication[机器学习及应用]</span><br><span class="line">    Unlimited --&gt; AssemblerAndInterface[汇编与接口]</span><br><span class="line">    Unlimited --&gt;  DeepLearningInPython[Python程序设计-深度学习基础及应用]</span><br><span class="line">    Unlimited --&gt; IntroductionToBigData[大数据技术基础]</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Postgraduate Course</tag>
      </tags>
  </entry>
</search>
